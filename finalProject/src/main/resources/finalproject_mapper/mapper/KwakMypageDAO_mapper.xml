<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kos.triple.project.persistence.kwak.MypageDAO">
	<!-- 리뷰갯수구하기 -->
	<select id="getReviewCnt" resultType="int">
		select count(*) from REVIEW where mem_id = #{mem_id}
	</select>
	
	<!-- 리뷰목록조회 -->
	<select id="getReviewList" parameterType="java.util.Map" resultType="kos.triple.project.vo.ReviewVO">
		<![CDATA[
			select * from(select reviewNo, reviewview, fun, near, price, content, reviewImg, regdate, mem_id, location_num, rownum rNum
			from(select * from review order by reviewNo desc)) f join TRIP_LOCATION_INFO t
			on f.location_num = t.location_num
			where rNum >= #{start} and rNum <= #{end} and mem_id = #{mem_id}
		]]>
	</select>
	
	<!-- 리뷰삭제 -->
	<delete id="reviewDelete" parameterType="int">
		DELETE FROM review where reviewNo = #{reviewNo}
	</delete>
	
	<!-- 에세이 갯수 -->
	<select id="getEssayCnt" resultType="int">
		select count(*) from essay where mem_id = #{mem_id}
	</select>
	
	<!-- 에세이 목록조회 -->
	<select id="getEssayList" parameterType="java.util.Map" resultType="kos.triple.project.vo.EssayVO">
		<![CDATA[
			select * from(select essayNo, essayTitle, essayContent, essayImg, security, essaygood, mem_id, rownum rNum
			from(select * from essay order by essayNo desc))
			where rNum >= #{start} and rNum <= #{end} and mem_id = #{mem_id}
		]]>
	</select>
	
	<!-- 에세이 상세보기 -->
	<select id="getEssayContent" resultType="kos.triple.project.vo.EssayVO">
		select * from essay where essayNo=#{essayNo}
	</select>
	
	<!-- 에세이댓글등록 -->
	<insert id="insertReply" parameterType="kos.triple.project.vo.EssayVO">
		insert into essay_comment(commentNo, replyContent, replyRegdate, mem_id, essayNo)
		values(essay_comment_seq.NEXTVAL, #{replyContent}, sysdate, #{mem_id}, #{essayNo})
	</insert>
	
	<!-- 댓글 목록 조회 -->
	<select id="replyList" resultType="kos.triple.project.vo.EssayVO">
		select * from (select * from essay_comment order by commentNo) where essayNo = #{essayNo}
	</select>
	
	<!-- 에세이 삭제용 댓글 목록 조회 -->
	<select id="delReplyList" resultType="int">
		select count(*) from essay_comment where essayNo = #{essayNo}
	</select>
	
	<!-- 에세이 삭제 -->
	<delete id="essayDelete" parameterType="int">
		DELETE FROM essay where essayNo = #{essayNo}
	</delete>
	
</mapper>